<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context-3.0.xsd">

    <!--Для связывания свойств используется механизм на основе аннотаций.-->
    <context:annotation-config/>

    <!--Всего фреймворком поддерживаются четыре разновидности автоматического связывания.

    -byName – пытается отыскать компонент в контейнере,
    чье имя (или идентификатор) совпадает с именем связываемого свойства.
    Если соответствующий компонент не найден, свойство останется несвязанным.

    -byType – пытается отыскать единственный компонент в контейнере,
    чей тип соответствует типу связываемого свойства.
    Если соответствующий компонент не найден, свойство не будет связано.

    -constructor – пытается сопоставить конструктор компонента,
    куда выполняется внедрение, с компонентами,
    чьи типы совпадают с аргументами конструктора.

    -autodetect – сначала пытается выполнить автоматическое связывание
    через конструктор, а затем по типу.-->

    <bean id="sonnet29"
          class="com.springinaction.springidol.poems.Sonnet29"/>

    <bean id="saxophone"
          class="com.springinaction.springidol.instruments.Saxophone"/>

    <bean id="piano"
          class="com.springinaction.springidol.instruments.Piano"/>

    <bean id="guitar"
          class="com.springinaction.springidol.instruments.Guitar"/>

    <bean id="cymbal"
          class="com.springinaction.springidol.instruments.Cymbal"/>

    <bean id="harmonica"
          class="com.springinaction.springidol.instruments.Harmonica"/>

    <!--id компонента Saxophone совпал с именем свойства instrument
    и Spring может автоматически связать инструмент,
    при наличии у компонента kenny атрибута autowire.-->
    <bean id="instrument"
          class="com.springinaction.springidol.instruments.Saxophone"/>

    <!--Атрибут autowire со значением byName сообщает фреймворку,
    что необходимо просмотреть все свойства компонента kenny
    и отыскать компоненты с соответствующими им именами.-->
    <bean id="kenny"
          class="com.springinaction.springidol.performers.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
    </bean>

    <bean id="kenny2"
          class="com.springinaction.springidol.performers.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <!--<property name="instrument" ref="saxophone"/>-->
    </bean>

    <!--Смешивание автоматического и явного связывания – отличный способ устранить неоднозначности,
    возникающие при автоматическом связывании по типу (byType).-->
    <bean id="kenny3"
          class="com.springinaction.springidol.performers.Instrumentalist">
        <property name="song" value="Jingle Bells"/>
        <!--<property name="instrument" ref="saxophone"/>-->
    </bean>

    <!--Это объявление сообщает фреймворку, что он должен исследовать конструктор
    класса PoeticJuggler и попытаться найти в конфигурации компоненты,
    соответствующие аргументам одного из конструкторов.

    В конфигурации уже присутствует определение компонента sonnet29, имеющего тип Poem
    и соответствующего аргументу одного из конструкторов класса PoeticJuggler.
    Поэтому для создания компонента duke, Spring будет использовать этот конструктор
    и передаст ему компонент sonnet29.

    В случае обнаружения нескольких компонентов, соответствующих аргументам конструктора,
    фреймворк Spring не будет пытаться угадать, какой из них использовать.

    Кроме того, если класс имеет несколько конструкторов,
    каждый из которых отвечает требованиям автоматического связывания,
    Spring не будет пытаться угадать, какой конструктор использовать.-->
    <bean id="duke"
          class="com.springinaction.springidol.performers.PoeticJuggler"
          autowire="constructor"/>

    <!--Только для версии (2.0/2.5) < spring-beans-3.0.xsd-->
    <!--<bean id="duke-auto"
          class="com.springinaction.springidol.performers.PoeticJuggler"
          autowire="autodetect"/>-->

    <bean id="balisong"
          class="com.springinaction.springidol.inventory.Balisong"/>

    <bean id="cuterDuke"
          class="com.springinaction.springidol.performers.KnifeJuggler"/>

</beans>
